File name: /mnt/g/My Drive/PROJECTS/AITrivia/index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <base id="base" href="/">  
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Science and Tech Trivia</title>
  <link rel="stylesheet" href="css/main.css">
</head>

<body>
  <nav class="navbar">
    <a href="index.html">Reset</a>
    <a href="pages/rankings.html" target="_blank">Rankings</a>
    <a href="pages/about.html" target="_blank">About</a>
  </nav>
  <div class="main-container">
    <div class="container" id="login-container">
      <h1>Enter Your Name:</h1>
      <div>
        <label for="team_name"></label>
        <input type="text" id="team_name">
      </div>
      <button onclick="login()">Login</button>
      <p id="duplicate-name-error" class="hidden" style="color: red; font-size: 24px;">Duplicate Name Access Denied</p>

      <p id="login-error" class="hidden"></p>
    </div>
  </div>
  <script src="js/login.js"></script>
</body>
</html>
File name: /mnt/g/My Drive/PROJECTS/AITrivia/project.py
import os

def read_and_write_to_project(filename):
    with open(filename, 'r') as f:
        content = f.read()

    with open('project.txt', 'a') as project_file:
        project_file.write(f'File name: {filename}\n')
        project_file.write(content)
        project_file.write('\n')

# Current directory where the script is running
current_directory = os.path.dirname(os.path.realpath(__file__))

for root, dirs, files in os.walk(current_directory):
    for file in files:
        if file.endswith('.py') or file.endswith('.js') or file.endswith('.html') or file.endswith('.css'):
            filepath = os.path.join(root, file)
            read_and_write_to_project(filepath)

File name: /mnt/g/My Drive/PROJECTS/AITrivia/css/main.css
body {
  font-family: Arial, sans-serif;
  line-height: 1.6;
  color: #333;
  margin: 0;
  padding: 20px;
}

.container {
  max-width: 800px;
  margin: 0 auto;
}

.hidden {
  display: none;
}

h1 {
  font-size: 24px;
  margin-bottom: 20px;
}

h2 {
  font-size: 20px;
  margin-bottom: 10px;
}

p {
  margin-bottom: 10px;
}

#question-image {
  width: 512px;
  height: auto;
}

input[type="radio"] {
  margin-bottom: 10px;
}

input[type="text"] {
  width: 506px; /* Updated width */
  font-size: 28px; /* Updated font-size */
  margin-top: 10px;
}


button[type="submit"] {
  background-color: #007BFF;
  border: none;
  color: white;
  font-size: 18px;
  font-weight: bold;
  padding: 12px 24px;
  cursor: pointer;
  margin-top: 10px;
  border-radius: 4px;
  transition: background-color 0.3s;
}

button[type="submit"]:hover {
  background-color: #0056B3;
}

body {
  font-family: Arial, sans-serif;
  line-height: 1.6;
  color: #333;
  margin: 0;
  padding: 0;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  max-width: 800px;
  padding: 20px;
  box-sizing: border-box;
}

.login-container {
  width: 100%;
  text-align: center;
}

.login-container h1 {
  font-size: 28px;
}

.login-container input[type="text"],
.login-container input[type="password"] {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  box-sizing: border-box;
  font-size: 18px;
}

button {
  background-color: #4CAF50;
  color: white;
  padding: 16px 32px;
  margin: 16px 0;
  border: none;
  cursor: pointer;
  width: 100%;
  font-size: 18px;
  transition: 0.3s;
}

button:hover {
  background-color: #45a049;
}

body {
  margin: 0;
  font-family: Arial, sans-serif;
  padding-top: 30px;
}

.navbar {
  background-color: #333;
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 0.5rem 0;
  width: 100%;
  position: fixed;
  top: 0;
  z-index: 1000;
}

.navbar a {
  color: white;
  text-decoration: none;
  padding: 0.5rem 1rem;
}

.navbar a:hover {
  background-color: #111;
}

.team-name {
  color: white;
}

.main-container {
  margin-top: 3rem;
}

.question-container {
  width: 512px;
  margin: 0 auto;
}

File name: /mnt/g/My Drive/PROJECTS/AITrivia/css/rankings.css
body {
  font-family: Arial, sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f2f2f2;
  margin: 0;
  padding: 0;
}

.container {
  max-width: 800px;
  width: 100%;
  background-color: white;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  padding: 1rem;
}

table {
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed; /* Add this line */
}

table th,
table td {
  width: 33.33%; /* Add this line */
  padding: 0.5rem;
  text-align: left;
  border-bottom: 1px solid #dddddd;
}

table th {
  background-color: #f2f2f2;
}

@media (max-width: 600px) {
  table {
    font-size: 14px;
  }
}



.navbar {
  background-color: #333;
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 0.5rem 0;
  width: 100%;
  position: fixed;
  top: 0;
  z-index: 1000;
}

.navbar a {
  color: white;
  text-decoration: none;
  padding: 0.5rem 1rem;
}

.navbar a:hover {
  background-color: #111;
}

.team-name {
  color: white;
}

.main-container {
  margin-top: 3rem;
}
File name: /mnt/g/My Drive/PROJECTS/AITrivia/js/login.js
async function login() {
    console.log("Login initiated");
    const teamName = document.getElementById("team_name").value;
    console.log("team fetched");
    const response = await fetch("https://aitrivia.online/quick_signup", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({
            name: teamName
        }),
    });

    const responseData = await response.json();
    console.log("Response arrived");
    console.log(responseData);
    const duplicateNameError = document.getElementById("duplicate-name-error");

    if (response.status === 401) {
        console.log("Login failed");
        return;
    }

    if (responseData.message === "Team already exists") {
        duplicateNameError.classList.remove("hidden");
        return;
    } else {
        duplicateNameError.classList.add("hidden");
    }

    localStorage.setItem("access_token", responseData.access_token);
    localStorage.setItem("teamName", teamName); // store teamName in localStorage
    console.log("Login successful");
    window.location.href = 'pages/quiz.html';
}

File name: /mnt/g/My Drive/PROJECTS/AITrivia/js/question-display.js
import { submitAnswer } from '/js/quiz-controller.js';
import { showResult  } from '/js/score-handler.js';

let countdownTimer;

function displayQuestion(index, questions, score) {
    const question = questions[index];
    if (index >= questions.length) {
        showResult(questions, score);
        return;
    }
    const questionPoints = question.points;
    const formattedQuestion = `<b>For ${questionPoints} pts</b>: ${question.question}`;
    document.getElementById("question").innerHTML = formattedQuestion;
    const questionImage = document.getElementById("question-image");

    if (question.image_link) {
        questionImage.src = question.image_link;
        questionImage.style.display = "block";
    } else {
        questionImage.style.display = "none";
    }

    if (question.type === 'multiple_choice') {
        document.getElementById("multiple_choice_options").classList.remove('hidden');
        document.getElementById("short_answer_input").classList.add('hidden');
        document.getElementById("option-a").innerText = question.options[0];
        document.getElementById("option-b").innerText = question.options[1];
        document.getElementById("option-c").innerText = question.options[2];
        document.getElementById("option-d").innerText = question.options[3];
    } else if (question.type === 'short_answer') {
        document.getElementById("multiple_choice_options").classList.add('hidden');
        document.getElementById("short_answer_input").classList.remove('hidden');
        document.getElementById("short_answer").value = "";
    }
    if (countdownTimer) {
        clearInterval(countdownTimer);
    }
}

function startCountdown(index, questions) {
    if (index >= questions.length) {return;} // dont countdown if quiz finished
    let timeLeft;
    if (questions[index].type === 'multiple_choice') {
        timeLeft = 15;
    } else if (questions[index].type === 'short_answer') {
        timeLeft = 30;
    }
    document.getElementById("countdown-display").innerText = `Time left: ${timeLeft}`;

    countdownTimer = setInterval(() => {
        timeLeft--;
        document.getElementById("countdown-display").innerText = `Time left: ${timeLeft}`;

        if (timeLeft === 0) {
            clearInterval(countdownTimer);
            submitAnswer(true);  // forced submission due to timer
        }
    }, 1000);
}

export { displayQuestion, startCountdown};

File name: /mnt/g/My Drive/PROJECTS/AITrivia/js/quiz-controller.js
console.log('made it to quiz-controller.js');
import { fetchQuestions, shuffleArray } from '/js/startup.js';
import { displayQuestion, startCountdown } from '/js/question-display.js';
import { updateScoreDisplay, showResult } from './score-handler.js';

let questions = [];
let currentQuestionIndex = 0;
let score = 0;
let maxScore = 0;

const startQuiz = async () => {
    console.log('startQuiz');
    const { shuffledQuestions } = await fetchQuestions();
    questions = shuffledQuestions;
    displayQuestion(currentQuestionIndex, questions, score); 
    updateScoreDisplay(score);
    startCountdown(currentQuestionIndex, questions);
};


async function submitAnswer(forceSubmit = false) {
    if (currentQuestionIndex >= questions.length) {return;}
    console.log('submitAnswer');
    const teamName = localStorage.getItem("teamName");
    const id = questions[currentQuestionIndex].id.toString(10);
    console.log(teamName, id);
    let answer;

    if (questions[currentQuestionIndex].type === 'multiple_choice') {
        if (forceSubmit) {
            answer = 'x';
            console.log('ABOUT TO SUMBIT THIS', answer);
        } else {
            const selectedOption = document.querySelector('input[name="option"]:checked');
            if (!selectedOption) return;
            answer = selectedOption.value;
            console.log('ABOUT TO SUMBIT THIS', answer);
        }
    } else if (questions[currentQuestionIndex].type === 'short_answer') {
        answer = document.getElementById("short_answer").value.trim();
    }

    const response = await fetch('https://aitrivia.online/submit_answer', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + localStorage.getItem("access_token"),
        },
        body: JSON.stringify({
            "id": id,
            "answer": answer,
            "team_name": teamName,
            "table": "teams"
        }),
    });

    const responseData = await response.json();
    console.log("Response data:", responseData);

    const resultDisplay = document.getElementById("result-display");
    const resultMessage = document.getElementById("result-message");
    const correctAnswer = document.getElementById("correct-answer");
    const questionContainer = document.querySelector('.question-container');

    if (responseData.message && responseData.message.includes("Correct")) {
        console.log("Answer is correct");
        score += questions[currentQuestionIndex].points;
        updateScoreDisplay(score);
        resultDisplay.classList.remove('hidden');
        resultMessage.innerText = 'Correct!';
        correctAnswer.innerText = '';
        questionContainer.classList.add('hidden');
    } else {
        console.log("Answer is incorrect");
        resultDisplay.classList.remove('hidden');
        resultMessage.innerText = 'Incorrect!';
        //if the response.Data.correct_answer is 1 char long then display the correct answer
        if (responseData.correct_answer.length === 1) {
            console.log("attempting to get the accurate MCQ " );
            if (responseData.correct_answer === "a") {
                correctAnswer.innerText = 'The correct answer was: ' + responseData.correct_answer + ': ' + questions[currentQuestionIndex].options[0];
            }
            if (responseData.correct_answer === "b") {
                correctAnswer.innerText = 'The correct answer was: ' + responseData.correct_answer + ': ' + questions[currentQuestionIndex].options[1];
            }
            if (responseData.correct_answer === "c") {
                correctAnswer.innerText = 'The correct answer was: ' + responseData.correct_answer + ': ' + questions[currentQuestionIndex].options[2];
            }
            if (responseData.correct_answer === "d") {
                correctAnswer.innerText = 'The correct answer was: ' + responseData.correct_answer + ': ' + questions[currentQuestionIndex].options[3];
            }
        } else {
            correctAnswer.innerText = 'The correct answer was: ' + responseData.correct_answer;
        }

        questionContainer.classList.add('hidden');
    }

    setTimeout(function() {
        resultDisplay.classList.add('hidden');
        questionContainer.classList.remove('hidden');
        currentQuestionIndex++;
        displayQuestion(currentQuestionIndex,questions, score);
        startCountdown(currentQuestionIndex,questions);
    }, 3000); // 3000ms (3 seconds) delay before showing next question
}



document.addEventListener('DOMContentLoaded', () => {
    document.querySelector("#submit-button").onclick = () => submitAnswer();;
});


startQuiz();

export { submitAnswer };
File name: /mnt/g/My Drive/PROJECTS/AITrivia/js/rankings.js
const rankingTable = document.getElementById("ranking-table");

// Function to update the table with fetched data
function updateTable(jsonResponse) {
  rankingTable.innerHTML = ""; // Clear the existing table content

  // Add table header
  const header = rankingTable.createTHead();
  const headerRow = header.insertRow(0);
  const headerRanking = headerRow.insertCell(0);
  const headerName = headerRow.insertCell(1);
  const headerScore = headerRow.insertCell(2);
  const headerQuestions = headerRow.insertCell(3);
  headerRanking.innerHTML = "RANK";
  headerName.innerHTML = "TEAM NAME";
  headerScore.innerHTML = "SCORE";
  headerQuestions.innerHTML = "ANSWERED QUESTIONS";

  const sortedTeams = jsonResponse.teams.sort((a, b) => b[2] - a[2]).slice(0, 20);

  sortedTeams.forEach((team, index) => {
    const row = rankingTable.insertRow(-1);
    row.style.backgroundColor = team[4]; // Set the row background color based on the team color
    row.style.color = 'black'; // Set the row text color to black

    const rankCell = row.insertCell(0);
    rankCell.textContent = index + 1;

    const nameCell = row.insertCell(1);
    nameCell.textContent = team[0];

    const scoreCell = row.insertCell(2);
    scoreCell.textContent = team[2];

    const questionsCell = row.insertCell(3);
    questionsCell.textContent = team[3];
  });
}

// Function to fetch data from the API and update the table
async function fetchDataAndUpdateTable(tableName = "grokkers") {
  try {
    const apiUrl = `https://aitrivia.online/get_teams_table?table_name=${tableName}`;
    const response = await fetch(apiUrl, {
      method: "GET",
      headers: {
        "Accept": "application/json"
      }
    });
    const data = await response.json();
    console.log(data)
    updateTable(data);
  } catch (error) {
    console.error("Error fetching data:", error);
  }
}

function updateCurrentTeamName() {
  const currentTeam = localStorage.getItem("currentTeam");
  const teamNameDisplay = document.getElementById("team-name-display");
  if (currentTeam) {
    teamNameDisplay.textContent = `Team: ${currentTeam}`;
  } else {
    teamNameDisplay.textContent = "No team selected";
  }
}
fetchDataAndUpdateTable();
updateCurrentTeamName();
// Fetch data and update table every second
setInterval(() => {
  fetchDataAndUpdateTable();
  updateCurrentTeamName();
}, 5000);

File name: /mnt/g/My Drive/PROJECTS/AITrivia/js/score-handler.js
let score = 0;

function showResult(questions, score) {
    const maxScore = questions.reduce((total, question) => total + question.points, 0);
    document.querySelector('.question-container').classList.add('hidden');
    document.getElementById("result").innerText = `Your score: ${score}/${maxScore}`;
    document.getElementById("result").classList.remove('hidden');
    setTimeout(() => {
        let baseurl;
        if (window.location.hostname === "sanjin84.github.io") {
            baseurl = "/AITrivia";
        } else {
            baseurl = "";
        }
        window.location.href = `${baseurl}/pages/rankings.html`;
    }, 8000); // 5000ms (5 seconds) delay before redirecting
}


// Update the displayed score
function updateScoreDisplay(score) {
    document.getElementById("score-display").innerText = `Score: ${score}`;
}

export { updateScoreDisplay, showResult };
File name: /mnt/g/My Drive/PROJECTS/AITrivia/js/startup.js
//gets questions from json this happens only once
async function fetchQuestions(url = 'questions.json') {
    console.log("fetching questions");
    try {
        const response = await fetch(url);
        const data = await response.json();
        const last100Questions = data.slice(-100);
        const shuffledQuestions = shuffleArray(last100Questions).slice(0, 5);
        return { shuffledQuestions };
    } catch (error) {
        console.error('Error fetching questions:', error);
    }
}
//shuffles questions
function shuffleArray(array) {
    let currentIndex = array.length,
        randomIndex;
    while (currentIndex !== 0) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;
        [array[currentIndex], array[randomIndex]] = [
            array[randomIndex], array[currentIndex]
        ];
    }
    return array;
}

export { fetchQuestions, shuffleArray};
File name: /mnt/g/My Drive/PROJECTS/AITrivia/pages/about.html
<!DOCTYPE html>
<html lang="en">
<head>
  <base id="base" href="/"> 
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Science and Tech Trivia</title>
  <link rel="stylesheet" href="css/main.css">
</head>

  <nav class="navbar">
    <a href="index.html">Reset</a>
    <a href="pages/rankings.html"">Rankings</a>
    <a href="pages/about.html">About</a>
    <span id="team-name-display" class="team-name"></span>
  </nav>
  <div class="main-container">
<div class="container">

  <h2>How Trivia AI was Built</h2>
  <p>Step 1. Manually built HTML + CSS template.</p>
  <p>Step 2. GPT - 4 Prompt to generate trivia questions in JSON format (see below).</p>
  <p>Step 3. GPT - 4 Prompt to display and mark questions using JS.</p>
  <p>Step 4. Manual addition of authentication and marking via API https://github.com/Sanjin84/triviaAPI.</p> 
  <p>Step 5. Python script to get Stable diffusion to create an image for each question using question content as prompt.</p> 
  <p>Step 6. GPT -4 Prompts for CSS improvements and question countdown.</p> 
    

  <h2>How to Use</h2>
  <p>If you are a developer or a coding enthusiast, the beta is free to use:</p>
  <p><a href="https://github.com/Sanjin84/AITrivia" target="_blank">Front end: https://github.com/Sanjin84/AITrivia</a></p>
  <p><a href="https://github.com/Sanjin84/triviaAPI" target="_blank">Back end: https://github.com/Sanjin84/triviaAPI</a></p>
  <p>Host the API on a cloud computer, and you are good to go.</p>
  <p>Follow and like the repo :).</p>
    
  
  <h2>Contact</h2>
  <p>If you need technical assistance in hosting, please contact <a href="mailto:sanjin@goprompt.io">mailto:sanjin@goprompt.io</a>.</p>
</div>
  </div>
      <script type="text/javascript">
    window.onload = function() {
      const teamName = localStorage.getItem("teamName");
      if (teamName) {document.getElementById("team-name-display").textContent = 'Team: ' +teamName;}
    };
  </script>
</body>
</html>
File name: /mnt/g/My Drive/PROJECTS/AITrivia/pages/quiz.html
<!DOCTYPE html>
<html lang="en">
<head>
  <base id="base" href="/">  
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Science and Tech Trivia</title>
  <link rel="stylesheet" href="css/main.css">
</head>

<body>
  <nav class="navbar">
    <a href="index.html">Reset</a>
    <a href="pages/rankings.html" target="_blank">Rankings</a>
    <a href="pages/about.html" target="_blank">About</a>
    <span id="team-name-display" class="team-name"></span>
  </nav>
  <div class="main-container">
    <div class="container" id="quiz-container">
      <h1>Science and Tech Trivia</h1>
      <p id="score-display">Score: 0</p>
      <p id="countdown-display">Time left: 10</p>
      <div class="question-container">
        <p id="question"></p>
        <img id="question-image" src="" alt="Question related image" style="width: 100%; display: none;">
        <div id="multiple_choice_options">
          <div>
            <input type="radio" name="option" value="a" id="option_a">
            <label for="option_a" id="option-a"></label>
          </div>
          <div>
            <input type="radio" name="option" value="b" id="option_b">
            <label for="option_b" id="option-b"></label>
          </div>
          <div>
            <input type="radio" name="option" value="c" id="option_c">
            <label for="option_c" id="option-c"></label>
          </div>
          <div>
            <input type="radio" name="option" value="d" id="option_d">
            <label for="option_d" id="option-d"></label>
          </div>
        </div>
        <div id="short_answer_input" class="hidden">
          <input type="text" placeholder="Your answer" id="short_answer">
        </div>
        <button id="submit-button">Submit</button>
      </div>
        <div id="result-display" class="hidden">
          <h1 id="result-message"></h1>
          <p id="correct-answer"></p>
        </div>
      <p id="result" class="hidden"></p>
    </div>
  </div>
  <script type="module" src="js/quiz-controller.js"></script>
  <script type="text/javascript">
    window.onload = function() {
      const teamName = localStorage.getItem("teamName");
      if (teamName) {document.getElementById("team-name-display").textContent = 'Team: ' +teamName;}
    };
  </script>
</body>
</html>

File name: /mnt/g/My Drive/PROJECTS/AITrivia/pages/rankings.html
<!DOCTYPE html>
<html lang="en">
<head>
  <base id="base" href="/">  
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Science and Tech Trivia Rankings</title>
  <link rel="stylesheet" href="css/rankings.css">
</head>

<body>
  <nav class="navbar">
    <a href="index.html">Reset</a>
    <a href="pages/rankings.html">Rankings</a>
    <a href="pages/about.html">About</a>
    <a href="pages/builder.html">Builder</a>
    <span id="team-name-display" class="team-name"></span>
  </nav>
  <section class="container main-container">
    <table id="ranking-table" class="ranking-table"></table>
  </section>
  <script src="js/rankings.js"></script>
  <script type="text/javascript">
    window.onload = function() {
      const teamName = localStorage.getItem("teamName");
      if (teamName) {document.getElementById("team-name-display").textContent = 'Team: ' +teamName;}
    };
  </script>
</body>
</html>

